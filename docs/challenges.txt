***** Stage#0 *** [literals]
+++ challenge#0: OCL: 2
+++ challenge#1: OCL: 'Peter'
+++ challenge#2: OCL: true

***** Stage#1 ***** [basic operation]
+++ challenge#0: OCL: 2 = 3
+++ challenge#1: OCL: 'Peter' = 'Peter'
+++ challenge#2: OCL: true and true

***** Stage#2 ***** [allInstances]
+++ challenge#0: OCL: Car.allInstances()

***** Stage#3 ***** [size]
+++ challenge#0: OCL: Car.allInstances()->size()
+++ challenge#1: OCL: Car.allInstances()->size() = 1

***** Stage#4 ***** [basic collect-iterator]
+++ challenge#0: OCL: Car.allInstances()->collect(c|5)
+++ challenge#1: OCL: Car.allInstances()->collect(c|c)
+++ challenge#2: OCL: Car.allInstances()->collect(c|false)

***** Stage#5 ***** [property-calls]
+++ challenge#0: OCL: Car.allInstances()->collect(c|c.color)
+++ challenge#1: OCL: Car.allInstances()->collect(c|c.color = 'black')

***** Stage#6 ***** [association-ends-calls]
+++ challenge#0: OCL: Car.allInstances()->collect(c|c.owners->size())
+++ challenge#1: OCL: Car.allInstances()->collect(c|c.owners->size() = 0)

***** Stage#7 ***** [exists-basic]
+++ challenge#0: OCL: Car.allInstances()->exists(c|true)
+++ challenge#1: OCL: Car.allInstances()->exists(c|false)
+++ challenge#2: OCL: Car.allInstances()->exists(c|c.color='black')
+++ challenge#3: OCL: Car.allInstances()->exists(c|c.owners->size() = 1)

***** Stage#8 ***** [exists-nested]
+++ challenge#0: OCL: Car.allInstances()->exists(c|c.owners->exists(p|p.name = 'Peter'))