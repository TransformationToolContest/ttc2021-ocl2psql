//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace TTC2021.OclToSql.Ocl.Dm
{
    
    
    /// <summary>
    /// The public interface for AssociationEnd
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(AssociationEnd))]
    [XmlDefaultImplementationTypeAttribute(typeof(AssociationEnd))]
    [ModelRepresentationClassAttribute("http://www.example.org/ocl#//dm/AssociationEnd")]
    public interface IAssociationEnd : IModelElement
    {
        
        /// <summary>
        /// The name property
        /// </summary>
        [DisplayNameAttribute("name")]
        [CategoryAttribute("AssociationEnd")]
        [XmlElementNameAttribute("name")]
        [IdAttribute()]
        [XmlAttributeAttribute(true)]
        string Name
        {
            get;
            set;
        }
        
        /// <summary>
        /// The mult property
        /// </summary>
        [DisplayNameAttribute("mult")]
        [CategoryAttribute("AssociationEnd")]
        [XmlElementNameAttribute("mult")]
        [XmlAttributeAttribute(true)]
        Multiplicity Mult
        {
            get;
            set;
        }
        
        /// <summary>
        /// The association property
        /// </summary>
        [DisplayNameAttribute("association")]
        [CategoryAttribute("AssociationEnd")]
        [XmlElementNameAttribute("association")]
        [XmlAttributeAttribute(true)]
        string Association
        {
            get;
            set;
        }
        
        /// <summary>
        /// The target property
        /// </summary>
        [DisplayNameAttribute("target")]
        [CategoryAttribute("AssociationEnd")]
        [XmlElementNameAttribute("target")]
        [XmlAttributeAttribute(true)]
        IEntity Target
        {
            get;
            set;
        }
        
        /// <summary>
        /// The opp property
        /// </summary>
        [DisplayNameAttribute("opp")]
        [CategoryAttribute("AssociationEnd")]
        [XmlElementNameAttribute("opp")]
        [XmlAttributeAttribute(true)]
        IAssociationEnd Opp
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Name property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NameChanging;
        
        /// <summary>
        /// Gets fired when the Name property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NameChanged;
        
        /// <summary>
        /// Gets fired before the Mult property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MultChanging;
        
        /// <summary>
        /// Gets fired when the Mult property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MultChanged;
        
        /// <summary>
        /// Gets fired before the Association property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AssociationChanging;
        
        /// <summary>
        /// Gets fired when the Association property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AssociationChanged;
        
        /// <summary>
        /// Gets fired before the Target property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TargetChanging;
        
        /// <summary>
        /// Gets fired when the Target property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TargetChanged;
        
        /// <summary>
        /// Gets fired before the Opp property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OppChanging;
        
        /// <summary>
        /// Gets fired when the Opp property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OppChanged;
    }
}

