//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace TTC2021.OclToSql.Sql
{
    
    
    /// <summary>
    /// The public interface for Join
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Join))]
    [XmlDefaultImplementationTypeAttribute(typeof(Join))]
    [ModelRepresentationClassAttribute("http://www.example.org/sql#//Join")]
    public interface IJoin : IModelElement
    {
        
        /// <summary>
        /// The left property
        /// </summary>
        [DisplayNameAttribute("left")]
        [CategoryAttribute("Join")]
        [XmlElementNameAttribute("left")]
        [XmlAttributeAttribute(true)]
        Nullable<bool> Left
        {
            get;
            set;
        }
        
        /// <summary>
        /// The rightItem property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("rightItem")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IFromItem RightItem
        {
            get;
            set;
        }
        
        /// <summary>
        /// The onExp property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("onExp")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IExpression OnExp
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Left property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LeftChanging;
        
        /// <summary>
        /// Gets fired when the Left property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LeftChanged;
        
        /// <summary>
        /// Gets fired before the RightItem property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RightItemChanging;
        
        /// <summary>
        /// Gets fired when the RightItem property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RightItemChanged;
        
        /// <summary>
        /// Gets fired before the OnExp property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OnExpChanging;
        
        /// <summary>
        /// Gets fired when the OnExp property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OnExpChanged;
    }
}

